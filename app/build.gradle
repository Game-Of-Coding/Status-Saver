buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
}

dependencies {
	// Jgit is alternative for git
	implementation ('org.eclipse.jgit:org.eclipse.jgit:3.7.1.201504261725-r') {
		// Resolves DuplicatePlatformClasses lint error
		exclude group: 'org.apache.httpcomponents', module: 'httpclient'
	}
	implementation 'com.android.support:recyclerview-v7:28.+'
	implementation 'com.github.Game-Of-Coding:Lib-Test:1.0.5'
	implementation 'de.hdodenhof:circleimageview:3.1.0'
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
    }

    signingConfigs {
	// Signing config release varient
	release {
	    if (project.hasProperty('RELEASE_KEY_FILE')) {
		storeFile file(RELEASE_KEY_FILE)
		storePassword RELEASE_KEY_PASSWORD
		keyAlias RELEASE_KEY_ALIAS
		keyPassword RELEASE_KEY_PASSWORD
	    }
	}
    }

    buildTypes {	
	release {
	    shrinkResources true
	    minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
	    signingConfig signingConfigs.release
	}
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']
    }
	lintOptions {
        	abortOnError false
    	}
}
